@using Nop.Web.Framework
@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Web.Framework.Infrastructure

@inject IWebHelper webHelper

@{
    var storeUrl = webHelper.GetStoreLocation(); 
    var searchBaseUrl = $"{storeUrl}searchspring/results?q=";
}

<!-- Search Form -->
<div class="search-container" style="position: relative;">
    <form id="searchForm" autocomplete="off">
        <input type="text" id="searchInput" placeholder="Type to search..." />
        <button type="submit">Search</button>
    </form>
    <div id="autocomplete-results" class="autocomplete-list"></div>
</div>

<style>
    .autocomplete-list {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border: 1px solid #ccc;
        z-index: 999;
        max-height: 200px;
        overflow-y: auto;
        display: none;
    }

    .suggestion-item {
        padding: 8px 10px;
        cursor: pointer;
    }

    .suggestion-item:hover {
        background-color: #f0f0f0;
    }
</style>

<script>
    const input = document.getElementById('searchInput');
    const resultsContainer = document.getElementById('autocomplete-results');
    const baseUrl = '@searchBaseUrl';

    // Only run autocomplete after intellisuggest is ready
    document.addEventListener('intellisuggest-ready', () => {
        const trackingParams = window.intellisuggest.getTrackingParams();
        const userId = trackingParams?.userId;
        const sessionId = trackingParams?.sessionId;

        if (!userId || !sessionId) {
            console.warn("Searchspring user/session ID missing.");
            return;
        }

        input.addEventListener('input', async function () {
            const query = input.value.trim();

            if (query.length < 2) {
                resultsContainer.innerHTML = '';
                resultsContainer.style.display = 'none';
                return;
            }

            try {
                const suggestUrl = `/searchspring/suggest?q=${encodeURIComponent(query)}&userId=${userId}&sessionId=${sessionId}`;
                const res = await fetch(suggestUrl);

                const contentType = res.headers.get('content-type') || '';
                if (!res.ok || !contentType.includes('application/json')) {
                    const text = await res.text();
                    console.error("Non-JSON or error response:", text);
                    resultsContainer.style.display = 'none';
                    return;
                }

                const data = await res.json();
                const suggestions = data?.suggestions || [];

                resultsContainer.innerHTML = '';
                if (suggestions.length > 0) {
                    suggestions.forEach(s => {
                        const item = document.createElement('div');
                        item.classList.add('suggestion-item');
                        item.textContent = s.value;
                        item.addEventListener('click', () => {
                            input.value = s.value;
                            window.location.href = baseUrl + encodeURIComponent(s.value);
                        });
                        resultsContainer.appendChild(item);
                    });
                    resultsContainer.style.display = 'block';
                } else {
                    resultsContainer.style.display = 'none';
                }
            } catch (err) {
                console.error('Error fetching suggestions:', err);
                resultsContainer.style.display = 'none';
            }
        });
    });

    // Submit handler
    document.getElementById('searchForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const query = input.value.trim();
        if (query) {
            window.location.href = baseUrl + encodeURIComponent(query);
        }
    });

    // Hide autocomplete when clicking outside
    document.addEventListener('click', function (event) {
        if (!event.target.closest('.search-container')) {
            resultsContainer.style.display = 'none';
        }
    });
</script>
