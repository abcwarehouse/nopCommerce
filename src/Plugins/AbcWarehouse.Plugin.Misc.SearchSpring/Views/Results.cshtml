@model AbcWarehouse.Plugin.Misc.SearchSpring.Models.SearchResultModel
@inject Nop.Services.Catalog.IProductService productService
@inject Nop.Services.Media.IPictureService pictureService
@inject Nop.Services.Localization.ILocalizationService localizationService
@inject Nop.Services.Seo.IUrlRecordService urlRecordService
@inject Nop.Web.Factories.IProductModelFactory productModelFactory
@inject Nop.Core.IWebHelper webHelper
@using Nop.Web.Models.Catalog
@using Nop.Core.Domain.Catalog
@using Nop.Web.Extensions
@using Nop.Web.Models.Media

@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
}

@if (!Model.Results.Any())
{
    <p>No products found.</p>
}
else
{
    <div class="products-container">
        <div class="products-wrapper">
            <div class="product-grid">
                <div class="item-grid">
                    @{

                        foreach (var item in Model.Results)
                        {
                            var product = await productService.GetProductBySkuAsync(item.Sku);
                            if (product != null)
                            {
                                var productUrl = await urlRecordService.GetSeNameAsync(product);

                                var model = new ProductOverviewModel
                                {
                                    Id = product.Id,
                                    Name = product.Name,
                                    SeName = productUrl
                                };

                                var pictures = await pictureService.GetPicturesByProductIdAsync(product.Id, 1);
                                if (pictures.Count > 0)
                                {
                                    var picTuple = await pictureService.GetPictureUrlAsync(pictures[0]);
                                    var pictureUrl = picTuple.Url;

                                    model.DefaultPictureModel = new PictureModel
                                    {
                                        ImageUrl = pictureUrl,
                                        Title = product.Name,
                                        AlternateText = product.Name
                                    };
                                }

                                <div class="item-box">
                                    @await Html.PartialAsync("_ProductBox", model)
                                </div>
                            }
                        }

                    }
                </div>
            </div>
        </div>
    </div>
}