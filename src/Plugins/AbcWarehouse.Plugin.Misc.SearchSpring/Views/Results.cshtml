@model AbcWarehouse.Plugin.Misc.SearchSpring.Models.SearchResultModel
@inject Nop.Services.Catalog.IProductService productService
@inject Nop.Services.Media.IPictureService pictureService
@inject Nop.Services.Localization.ILocalizationService localizationService
@inject Nop.Services.Seo.IUrlRecordService urlRecordService
@inject Nop.Web.Factories.IProductModelFactory productModelFactory
@inject Nop.Core.IWebHelper webHelper
@using Nop.Web.Models.Catalog
@using Nop.Core.Domain.Catalog
@using Nop.Web.Extensions
@using Nop.Web.Models.Media

@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
}

@if (!Model.Results.Any())
{
    <p>No products found.</p>
}
else
{
    <div class="products-container">
        <div class="products-wrapper">
            <div class="product-grid">
                <div class="item-grid">
                    @{

                        foreach (var item in Model.Results)
                        {
                            var product = await productService.GetProductBySkuAsync(item.Sku);
                            if (product != null)
                            {
                                var productUrl = await urlRecordService.GetSeNameAsync(product);

                                var productOverviewModels = await productModelFactory.PrepareProductOverviewModelsAsync(
                                    new[] { product },
                                    true,
                                    true);

                                var model = productOverviewModels.FirstOrDefault();

                                if (model != null)
                                {
                                    <div class="item-box">
                                        @await Html.PartialAsync("_ProductBox", model)
                                    </div>
                                }
                            }
                        }

                    }
                </div>
            </div>
            @if (Model.TotalPages > 1)
            {
                <nav class="pagination">
                    <ul>
                        @for (var i = 1; i <= Model.TotalPages; i++)
                        {
                            var activeClass = i == Model.PageNumber ? "active" : "";
                            <li class="@activeClass">
                                <a href="@Url.RouteUrl("SearchSpringResults", new { q = Model.Query, page = i })">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
    </div>
}