@model CategorySimpleModel

@inject ISettingService settingService
@inject IStoreContext storeContext

@{ 
    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    var numberOfSubcategoriesToShow = await settingService.GetSettingByKeyAsync("VoyageThemeSettings.NumberOfSubcategoriesOnHomepage", 6, storeId, true);

    var allSubcategories = Model.SubCategories.Count;

    var subCategoriesToShow = allSubcategories > numberOfSubcategoriesToShow ?
        Model.SubCategories.Take(numberOfSubcategoriesToShow).ToList() :
        Model.SubCategories; 
    }
@if (Model.SubCategories.Count > 0)
{
    <ul class="sub-category-list">
        @foreach (var subCategory in subCategoriesToShow)
        {
            <li class="sub-category-item">
                <a class="name" href="@Url.RouteUrl("Category", new { subCategory.SeName })" title="@subCategory.Name"><span>@subCategory.Name</span></a>
            </li>
        }
        @if(allSubcategories > subCategoriesToShow.Count)
        {
            <li class="sub-category-item">
                <a class="name view-more" href="@Url.RouteUrl("Category", new { Model.SeName })" title="@T("Sevenspikes.Themes.Voyage.ViewMore")"><span>@T("Sevenspikes.Themes.Voyage.ViewMore")</span></a>
            </li>
        }
    </ul>
}