@using Nop.Core
@using Nop.Core.Configuration
@using Nop.Core.Events
@using StackExchange.Profiling
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@using Nop.Services.Events
@using Nop.Services.Security
@using Nop.Web.Framework.Events
@* custom *@
@using Nop.Plugin.Misc.AbcFrontend.Services
@using Nop.Plugin.Misc.AbcCore
@using Nop.Plugin.Misc.AbcCore.Services
@using Nop.Web.Framework.Infrastructure

@inject CommonSettings commonSettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject IWorkContext workContext
@inject SeoSettings seoSettings
@inject AppSettings appSettings
@inject Nop.Services.Localization.ILanguageService languageService
@* Custom injects *@
@inject FrontEndService frontEndService
@inject IStoreContext storeContext
@{
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.countryselect.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.common.js");
    // ABC: Using custom AjaxCart implementation
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Themes/Pavilion/Content/scripts/abc/public.ajaxcart.js");

    //when jQuery migrate script logging is active you will see the log in the browser console

    var iosFixFilePath = "~/Plugins/SevenSpikes.Core/Scripts/iOS-12-array-reverse-fix.min.js";
    var iosFixContentFilePath = CommonHelper.DefaultFileProvider.MapPath(iosFixFilePath);

    string fullTitle = Html.NopTitle().ToString();
    string shortTitle = "";
    if(fullTitle.Length >= 60) 
    {
        shortTitle = fullTitle.Substring(0, 60);
    }
    else
    {
        shortTitle = fullTitle;
    }

    var currentStore = await storeContext.GetCurrentStoreAsync();
    string storeId = "storeId" + currentStore.Id.ToString();

    if (System.IO.File.Exists(iosFixContentFilePath))
    {
        Html.AppendScriptParts(ResourceLocation.Footer, iosFixFilePath);
    }

    if (commonSettings.JqueryMigrateScriptLoggingActive)
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.js");
    }
    else
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.min.js");
    }
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-ui-dist/jquery-ui.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation/jquery.validate.min.js");
    // ABC: changed to head to work with SLI
    Html.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery/jquery.min.js");

    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

    var displayMiniProfiler = appSettings.CommonConfig.MiniProfilerEnabled && await permissionService.AuthorizeAsync(StandardPermissionProvider.AccessProfiling);

    var isAndroid23Class = "notAndroid23";
    var userAgent = Url.ActionContext.HttpContext.Request.Headers["User-Agent"];
    if (!string.IsNullOrWhiteSpace(userAgent) && userAgent.ToString().IndexOf("Android 2.", StringComparison.InvariantCultureIgnoreCase) > 0)
    {
        isAndroid23Class = "android23";
    }

    var currentPageClass = (await (await Html.PartialAsync("_CurrentPageClass")).RenderHtmlContentAsync()).Trim();

    var supportRtl = await this.ShouldUseRtlThemeAsync();
    
    //event    
    await eventPublisher.PublishAsync(new PageRenderingEvent(this.Html));

    // ABC: custom stuff
    bool isHawthorne = frontEndService.StoreIsHawthorne(await storeContext.GetCurrentStoreAsync());

    string equalPaymentModalTextColor = isHawthorne ?
        "gray" :
        await HtmlHelpers.GetPavilionPrimaryColorAsync();
}
<!DOCTYPE html>
<html lang="@languageService.GetTwoLetterIsoLanguageName(await workContext.GetWorkingLanguageAsync())" @(await this.ShouldUseRtlThemeAsync() ? Html.Raw(" dir=\"rtl\"") : null) @Html.NopPageCssClasses()>
<head>
    <!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-TBLL3Z89');</script>
    <!-- End Google Tag Manager -->

    <title>@shortTitle</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@(Html.NopMetaDescription())" />
    <meta name="keywords" content="@(Html.NopMetaKeywords())" />
    <meta name="generator" content="nopCommerce" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0" />
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,700&display=swap' rel='stylesheet' type='text/css'>

    @Html.NopHeadCustom()
    @*This is used so that themes can inject content into the header*@
    @await Html.PartialAsync("Head")
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeadHtmlTag })
    @await Component.InvokeAsync("Widget", new { widgetZone = "head_html_tag_after_css_files_pavilion" })

    @Html.NopCssFiles(ResourceLocation.Head)
    @Html.NopScripts(ResourceLocation.Head)
    @Html.NopCanonicalUrls()
    @await Component.InvokeAsync("NewsRssHeaderLink")
    @await Component.InvokeAsync("BlogRssHeaderLink")
    @*Insert favicon and app icons head code*@
    @await Component.InvokeAsync("Favicon")
    @if (displayMiniProfiler)
    {
    
        <mini-profiler />
    }
    @Html.NopInlineScripts(ResourceLocation.Head)
    <!--Powered by nopCommerce - https://www.nopCommerce.com-->

    <script async src="https://apps.bazaarvoice.com/deployments/abcwarehouse/main_site/production/en_US/bv.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" referrerpolicy="no-referrer" />

    <!-- SearchSpring Scripts -->
    <script src="https://cdn.searchspring.io/script.js"></script>
    <script async src="https://cdn.searchspring.net/intellisuggest/is.min.js"></script>
    <script>
        window.intellisuggest = window.intellisuggest || [];
        intellisuggest.push(['setSiteId', '4lt84w']);
    </script>

    <!-- End SearchSpring Scripts -->

    <script>
        (function() {
            function getCookie(name) {
                var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
                return match ? match[2] : null;
            }

            function setCookie(name, value, days) {
                var expires = "";
                if (days) {
                    var date = new Date();
                    date.setTime(date.getTime() + (days*24*60*60*1000));
                    expires = "; expires=" + date.toUTCString();
                }
                document.cookie = name + "=" + value + expires + "; path=/; SameSite=Lax";
            }

            function generateUUID() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }

            var ssShopperId = getCookie("ssShopperId");
            if (!ssShopperId) {
                ssShopperId = generateUUID();
                setCookie("ssShopperId", ssShopperId, 365);
            }

            window.intellisuggest = window.intellisuggest || [];
            intellisuggest.push(["setShopperId", ssShopperId]);

            console.log("ssShopperId set to:", ssShopperId);
        })();
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchBox = document.querySelector('#small-searchterms')
                || document.querySelector('input[type="search"]')
                || document.querySelector('input[name="q"]');

            if (!searchBox) {
                console.warn('❌ Search box not found!');
                return;
            }

            console.log('✅ Search box found. Setting up event listener.');

            function debounce(func, wait) {
                let timeout;
                return function (...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(this, args), wait);
                };
            }

            searchBox.addEventListener('input', debounce(async function () {
                const query = this.value.trim();
                if (query.length < 2) {
                    console.log('ℹ️ Query too short.');
                    return;
                }

                const userId = getCookie('ssShopperId');
                const sessionId = getCookie('ssSessionIdNamespace');

                console.log('🔍 Suggest Input Triggered');
                console.log('Query:', query);
                console.log('userId:', userId);
                console.log('sessionId:', sessionId);

                const suggestUrl = `/searchspring/suggest?q=${encodeURIComponent(query)}${
                    userId ? `&userId=${encodeURIComponent(userId)}` : ''
                }${
                    sessionId ? `&sessionId=${encodeURIComponent(sessionId)}` : ''
                }`;

                console.log('📡 Suggest URL:', suggestUrl);

                try {
                    const response = await fetch(suggestUrl);
                    const data = await response.json();
                    console.log('📦 Suggest API response:', data);
                } catch (e) {
                    console.error('❗ Suggest fetch error:', e);
                }
            }, 300));

            function getCookie(name) {
                const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
                return match ? match[2] : null;
            }
        });
    </script>

    <!-- Microsoft Clarity Script -->
    <script type="text/javascript">
        (function(c,l,a,r,i,t,y){
            c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
            t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
            y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
        })(window, document, "clarity", "script", "sewgt4p9qm");
    </script>

    <!-- Meta Pixel Code -->
    <script>
    !function(f,b,e,v,n,t,s)
    {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
    n.callMethod.apply(n,arguments):n.queue.push(arguments)};
    if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
    n.queue=[];t=b.createElement(e);t.async=!0;
    t.src=v;s=b.getElementsByTagName(e)[0];
    s.parentNode.insertBefore(t,s)}(window,document,'script',
    'https://connect.facebook.net/en_US/fbevents.js');
    fbq('init', '279056429645080'); 
    fbq('track', 'PageView');

document.addEventListener('DOMContentLoaded', function() {
  // Check if .storeId8 exists
  if (document.querySelector('.storeId8')) {

<!-- Begin Adtaxi Container Tag - Loading asynchronously -->
    (function(a,b,c,d){
        a="https://tags.tiqcdn.com/utag/adtaxi/hawthorneonline.com/prod/utag.js";
        b=document;c="script";d=b.createElement(c);d.src=a;d.type="text/java"+c;d.async=true;
        a=b.getElementsByTagName(c)[0];a.parentNode.insertBefore(d,a);
    })();
    <!-- End Adtaxi Container Tag -->





    // Update Instagram link only if .storeId8 is present
    const instagramLink = document.querySelector('li.instagram a');
    if (instagramLink) {
      instagramLink.href = "https://www.instagram.com/hawthorneappliance_/?fbclid=IwZXh0bgNhZW0CMTEAAR4fisWP1oVHnse9_TcMzDIhZ2zH2NpFFDTtwy5duz6V0C3E3mxhpyKMQY46iQ_aem_DquFc1PXxU6EMA7rq7vKKg";
    }
  }

  
});    
   

    </script>

    <script>

        @* Brand Filter Search *@
document.addEventListener('DOMContentLoaded', function() {
    const brandSearchInput = document.getElementById('brandSearchInput');
    
    if (brandSearchInput) {
        // Trigger search on input
        brandSearchInput.addEventListener('input', function() {
            const searchTerm = this.value.trim().toLowerCase();
            const brandItems = document.querySelectorAll('.brand-list li');
            
            brandItems.forEach(item => {
                const brandName = item.getAttribute('data-brand-name');
                if (brandName.includes(searchTerm)) {
                    item.style.display = 'block'; // Show matching items
                } else {
                    item.style.display = 'none';  // Hide non-matching items
                }
            });
        });
    }
});
    </script>



    <noscript>
    <img height="1" width="1" 
    src="https://www.facebook.com/tr?id=279056429645080&ev=PageView
    &noscript=1"/>
    </noscript>
    <!-- End Meta Pixel Code -->

    <script src="https://kit.fontawesome.com/6f12e215e1.js" crossorigin="anonymous"></script>

    <!-- Include the uuid library -->
    <script src="https://cdn.jsdelivr.net/npm/uuid@8.3.2/dist/umd/uuidv4.min.js"></script>
    <script>
    function initializeSessionIdNamespace() {
        var sessionKey = "ssSessionIdNamespace";

        // Log current sessionStorage for debugging purposes
        console.log("Current sessionStorage value:", sessionStorage.getItem(sessionKey));

        // Check if the ssSessionIdNamespace is already set in sessionStorage
        if (!sessionStorage.getItem(sessionKey)) {
        console.log("ssSessionIdNamespace not found, creating a new one...");
        // Generate a new UUID (ensure uuidv4 is properly loaded in your environment)
        var uuid = uuidv4();
        sessionStorage.setItem(sessionKey, uuid);
        document.cookie = sessionKey + "=" + uuid + "; path=/; SameSite=Lax";
        }

        // Log the sessionId after ensuring it has been set
        var sessionId = sessionStorage.getItem(sessionKey);
        console.log("Session ID for this tab:", sessionId);
    }

    // Run the function when the page loads
    window.addEventListener("load", initializeSessionIdNamespace);
    </script>

    <script>
        (function() {
            const SITE_ID = "4lt84w";
            const BEACON_URL = "https://beacon.searchspring.io/beacon/event"; 
            const CATEGORY = "searchspring.recommendations.user-interactions";

            function uuidv4() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }

            function getCookie(name) {
                const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
                return match ? match[2] : null;
            }

            function setCookie(name, value, days) {
                const expires = new Date(Date.now() + days * 864e5).toUTCString();
                document.cookie = name + '=' + value + '; expires=' + expires + '; path=/; SameSite=Lax';
            }

            function getOrCreateId(cookieName) {
                let id = getCookie(cookieName);
                if (!id) {
                    id = Math.random().toString(36).substring(2) + Date.now();
                    setCookie(cookieName, id, 365);
                }
                return id;
            }

            const ssShopperId = getOrCreateId("ssShopperId");
            const ssSessionId = getCookie("ssSessionIdNamespace") || getOrCreateId("ssSessionId");

            function sendBeacon(eventType, eventData = {}) {
                const payload = {
                    type: eventType,
                    category: CATEGORY,
                    id: uuidv4(),
                    event: eventData,
                    context: {
                        siteId: SITE_ID,
                        shopperId: ssShopperId,
                        sessionId: ssSessionId,
                        page: window.location.href,
                        referrer: document.referrer || null,
                        timestamp: new Date().toISOString(),
                        userAgent: navigator.userAgent
                    }
                };

                console.log('📡 Sending beacon:', eventType, payload);

                const jsonPayload = JSON.stringify(payload);
                
                // Try using native sendBeacon first (bypasses CORS for analytics)
                if (navigator.sendBeacon) {
                    const blob = new Blob([jsonPayload], { type: 'application/json' });
                    const success = navigator.sendBeacon(BEACON_URL, blob);
                    
                    if (success) {
                        console.log('✅ Beacon sent via navigator.sendBeacon');
                        return;
                    } else {
                        console.warn('⚠️ navigator.sendBeacon failed, trying fetch with no-cors...');
                    }
                }

                // Fallback: Use fetch with no-cors mode
                // Note: no-cors means we won't see the response, but the request will go through
                fetch(BEACON_URL, {
                    method: "POST",
                    headers: { 
                        "Content-Type": "text/plain" // Changed to avoid CORS preflight
                    },
                    body: jsonPayload,
                    mode: 'no-cors', // This bypasses CORS but you won't see the response
                    keepalive: true // Keep request alive even if page unloads
                })
                .then(() => {
                    console.log("✅ Beacon sent via fetch (no-cors mode)");
                })
                .catch(err => {
                    console.error("❌ Beacon error:", err);
                });
            }

            // --- Page view ---
            document.addEventListener("DOMContentLoaded", function() {
                setTimeout(() => {
                    sendBeacon(profile.render, { action: page.view });
                }, 500); // Small delay to ensure page is fully loaded
            });

            // --- Product click (Add to cart) ---
            document.addEventListener("click", function(e) {
                const btn = e.target.closest(".add-to-cart-button, input[name='addtocartbutton']");
                if (!btn) return;

                const productElement = btn.closest("[data-productid]");
                const productId = productElement ? productElement.getAttribute("data-productid") : null;
                const sku = productElement?.querySelector(".sku, .product-sku")?.textContent.trim() || "";
                const name = productElement?.querySelector(".product-title, h2, h3")?.textContent.trim() || "";
                const price = productElement?.querySelector(".actual-price, .price")?.textContent.trim() || "";

                sendBeacon("profile.product.click", { 
                    productId, 
                    sku, 
                    name,
                    price
                });
            });

            // --- Order completion ---
            if (window.location.pathname.toLowerCase().includes("/checkout/completed")) {
                document.addEventListener("DOMContentLoaded", function() {
                    setTimeout(() => {
                        const orderNumber = document.querySelector(".order-number strong")?.textContent?.trim() || null;
                        const orderTotal = document.querySelector(".order-total strong")?.textContent?.trim() || null;
                        
                        sendBeacon("profile.order.purchase", { 
                            orderNumber,
                            orderTotal
                        });
                    }, 500);
                });
            }

            // Make sendBeacon available globally
            window.searchSpringBeacon = sendBeacon;
        })();
    </script>

</head>

@functions {
    public string GetBodyClass()
    {
        var routeData = ViewContext.RouteData;
        var controller = routeData.Values["controller"]?.ToString() ?? "home";
        var action = routeData.Values["action"]?.ToString() ?? "index";
        
        // Combine controller and action to create a unique class
        return $"{controller.ToLowerInvariant()}-{action.ToLowerInvariant()}";
    }
}

<body class="@GetBodyClass() @storeId @isAndroid23Class @currentPageClass @if (supportRtl){<text>rtl</text>}">

    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TBLL3Z89"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->

    @* ABC: A bunch of custom styles *@
    <style>
        .flyout-cart-wrapper:hover .flyout-cart {
            z-index: 1001;
        }
        .abc-clearance .price.you-save, .abc-clearance .you-save-amt {
            display: none;
        }
        .abc-clearance .price.old-price, .abc-clearance .price.old-product-price {
            display: none;
        }
        .abc-clearance .price.actual-price {
            text-decoration: line-through;
        }
        .abc-clearance .product-item.product-item.product-item {
            min-height: 390px;
        }
        .abc-clearance .price-sale-tag {
            display: none;
        }
        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1050; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }
        /* Modal Content */
        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 2px solid #@await HtmlHelpers.GetPavilionPrimaryColorAsync();
            width: 300px;
        }
        #dbuymodel2 .modal-content {
            width: 100%;
        }
        .modal-content p {
            font-size: 10px;
        }
        .modal-content input {
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
        }
        .modal-content form label {
            width: 9em;
            text-align: right;
            display: inline-block;
            font-weight: bold;
            font-size: 0.8em;
        }
        .modal-content form {
            margin: 0.5em 0;
        }
        .modal-content form input {
            width: 145px;
            margin: 6px 0;
        }
        .modal-content form .required {
            color: red;
        }
        .modal-content .required-text {
            color: red;
            font-style: italic;
            text-align: right;
        }
        .modal-content button {
            float: right;
            background-color: #31699C;
            color: white;
            border: 0;
            padding: 6px 30px;
            margin: 14px;
            font-weight: bold;
            border-radius: 6px;
        }
        .modal-content button:disabled {
            opacity: 0.65;
            cursor: not-allowed;
        }
        .modal-content h3 {
            clear: both;
        }
        .month-count {
            font-size: 7em;
            font-weight: 700;
            float: left;
        }
        .months-text {
            font-size: 3em;
            font-weight: 600;
            text-decoration: underline;
            margin-top: 0.5em;
        }
    </style>

    @RenderBody()
    @Html.NopCssFiles(ResourceLocation.Footer)
    @Html.NopScripts(ResourceLocation.Footer)
    <div id="goToTop"></div>
    @Html.NopInlineScripts(ResourceLocation.Footer)
</body>
</html>
