@model FooterModel

@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Domain.Topics
@using Nop.Services.Configuration
@* ABC: custom *@
@using Nop.Web.Models.Common
@using Nop.Web.Framework.Infrastructure
@using Nop.Plugin.Misc.AbcCore.Infrastructure
@using Nop.Web.Extensions

@inject ISettingService settingService
@inject IStoreContext storeContext
@inject IWorkContext workContext

@{
    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    var removeCopyright = await settingService.GetSettingByKeyAsync("pavilionthemesettings.removecopyright", false, storeId, true);
    var removeDesignedBy = await settingService.GetSettingByKeyAsync("pavilionthemesettings.removedesignedby", false, storeId, true);
    var isMickey = @Context.Request.Host.ToString().Contains("mickeyshorr");
    var hideCustomerService = isMickey;
    var shouldDisplayContractSales = @Context.Request.Host.ToString().Contains("abcwarehouse");
    var manageCreditCardLink = isMickey ?
        "https://consumercenter.mysynchrony.com/consumercenter/login/" :
        "https://www.mysynchrony.com/mysynchrony/merchants/cmp-index.html?market=electronics&store=abcwarehouse";
}

@* custom styles *@
<style>
    .list .phone {
        font-weight: bold;
    }

    .footer .title.title {
        margin: 0 0 0px;
    }

    @@media (min-width: 1001px) {
        .footer-block {
            width: 30%;
            display: inline-block;
            vertical-align: top;
            margin-right: 5%;
        }

        .footer-block-last {
            margin-right: 0;
        }
    }
</style>
<div class="footer">
    <!-- ABC custom -->
    <div class="newsletter-signup">
        
        
        <h2>NEVER MISS A DEAL!</h2>
        <h3>$50 OFF YOUR PURCHASE*</h3>

        @await Component.InvokeAsync("NewsletterBox")

        <div class="sms-disclaimer">
            <p> I agree to receive text messages about my orders to the mobile number provided at opt-in 
            from ABC Warehouse. Only U.S. mobile numbers are eligible to participate. Consent is not a condition of 
           purchase. Msg frequency may vary. Msg & data rates may apply. Reply HELP for help and STOP to cancel. See 
             Terms and Conditions & Privacy Policy.</p>
             <p>
                *$249 Minimum. Valid IN STORE ONLY. This offer cannot be combined with other offers. Exclusions Apply. View 
                <a href="https://www.abcwarehouse.com/policies-information#promo-offers">Terms & Conditions</a>.
             </p>

        </div>
    </div>
    <div class="footer-upper">
        <div class="center">
            @await Component.InvokeAsync(typeof(NewsletterBoxViewComponent))
            @await Component.InvokeAsync(typeof(SocialButtonsViewComponent))
        </div>
    </div>
    <div class="footer-middle">
        <div class="center">
            <!-- ABC custom -->
            @if(storeId != 8)
            {
                <div class="widget-min">
                    @await Component.InvokeAsync("Widget", new { widgetZone = CustomPublicWidgetZones.FooterBelow480px })
                </div>
                <div class="widget-480">
                    @await Component.InvokeAsync("Widget", new { widgetZone = CustomPublicWidgetZones.FooterMin480px })
                </div>
                <div class="widget-768">
                    @await Component.InvokeAsync("Widget", new { widgetZone = CustomPublicWidgetZones.FooterMin768px })
                </div>
                <div class="widget-1000">
                    @await Component.InvokeAsync("Widget", new { widgetZone = CustomPublicWidgetZones.FooterAbove1000px })
                </div>
            }
            <div class="footer-block">
                <div class="title">
                    <strong>@T("Footer.Information")</strong>
                </div>
                <ul class="list">
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                    }

                    @* more custom *@
                    @{
                        string brandUrl = "/manufacturer/all";
                    }
                    <li><a href="@brandUrl">Shop by Brand</a></li>
                    @if (storeId != 8)
                    {
                        <li><a href="/gift">Gift Card</a></li>
                    }
                    <li><a href="/blog">Blog</a></li>
                </ul>
            </div>
            @* ABC custom *@
            @if (!hideCustomerService)
            {
                <div class="footer-block">
                    <div class="title">
                        <strong>@T("Footer.CustomerService")</strong>
                    </div>
                    <ul class="list">
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                        {
                            <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                        }
                        @if (shouldDisplayContractSales)
                        {
                            <li><a href="/contract-sales">Contract Sales</a></li>
                        }
                    </ul>
                </div>
            }
            <div class="footer-block">
                <div class="title">
                    <strong>@T("Footer.CustomerService")</strong>
                </div>
                <ul class="list">
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                    {
                        <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block">
                <div class="title">
                    <strong>@T("Footer.MyAccount")</strong>
                </div>
                <ul class="list">
					@if (Model.DisplayCustomerInfoFooterItem)
	                {
	                    <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
	                }
					@if (Model.DisplayCustomerAddressesFooterItem)
	                {
	                    <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
	                }
	                @if (Model.DisplayCustomerOrdersFooterItem)
	                {
	                    <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
					}
                    @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                        @* ABC custom *@
                        <li><a href="@manageCreditCardLink">Manage Credit Card</a></li>
                    }
                	@if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                    }
                    @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                    }
                    @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                    {
                        <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                    }
                </ul>
            </div>
            @* ABC: removed the quick-contact section
            <div class="footer-block quick-contact">
                <div class="title">
                    <strong>@T("SevenSpikes.Themes.Pavilion.Footer.ContactUs")</strong>
                </div>
                <ul class="list">
                    <li class="address"><span>@T("SevenSpikes.Themes.Pavilion.Footer.Address")</span></li>
                    <li class="email"><span>@T("SevenSpikes.Themes.Pavilion.Footer.Email")</span></li>
                    <li class="phone"><span>@T("SevenSpikes.Themes.Pavilion.Footer.Phone")</span></li>
                </ul>
            </div> *@
        </div>
    </div>
    <div class="footer-lower">
        <div class="center">
            <ul class="accepted-payments">
                <li class="method1"></li>
                <li class="method2"></li>
                <li class="method3"></li>
                <li class="method4"></li>
            </ul>
            <div class="footer-disclaimer">
                @T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)
            </div>
            @if (!removeCopyright)
            {
                <div class="footer-powered-by">
	                @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
	                    Please find more info at https://www.nopcommerce.com/nopcommerce-copyright-removal-key*@
	                Powered by <a href="@(OfficialSite.Main)" target="_blank" @(Model.IsHomePage ? string.Empty : "rel=nofollow")>nopCommerce</a>
                </div>

            }
            @if (!removeDesignedBy)
            {
                <div class="footer-designed-by">
                    Designed by <a href="https://www.nop-templates.com/" title="nopCommerce themes and plugins by Nop-Templates" target="_blank">Nop-Templates.com</a>
                </div>
            }

            @if (Model.DisplayTaxShippingInfoFooter)
            {
                var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                <div class="footer-tax-shipping">
                    @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteTopicUrl("shippinginfo"))
                </div>
            }
            <div class="footer-store-theme">
                @await Component.InvokeAsync(typeof(StoreThemeSelectorViewComponent))
            </div>
        </div>
    </div>
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.Footer, additionalData = Model })
</div>
