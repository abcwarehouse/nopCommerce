@model FooterModel

@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Services.Configuration

@inject IStoreContext storeContext
@inject IWorkContext workContext
@inject ISettingService settingService
@inject IThemeContext themeContext

@{
    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    var removeCopyright = await settingService.GetSettingByKeyAsync("voyagethemesettings.removecopyright", false, storeId, true);
    var removeDesignedBy = await settingService.GetSettingByKeyAsync("voyagethemesettings.removedesignedby", false, storeId, true);
}

<div class="footer">
    <div class="footer-upper">
        @await Component.InvokeAsync("NewsletterBox")
    </div>
    <div class="footer-middle">
        <div class="footer-blocks">
            <div class="footer-block">
                <div class="title">
                    <strong>@T("Footer.Information")</strong>
                </div>
                <ul class="list">
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                    @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                    }
                    @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block">
                <div class="title">
                    <strong>@T("Footer.CustomerService")</strong>
                </div>
                <ul class="list">
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                    }
                    @if (Model.DisplayContactUsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                    }
                    @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block">
                <div class="title">
                    <strong>@T("SevenSpikes.Themes.Voyage.Footer.Offers")</strong>
                </div>
                <ul class="list">
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                    }
                    @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                    }
                    @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                    }
                    @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                    }
                    @if (Model.SearchEnabled && Model.DisplayProductSearchFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                    }
                </ul>
            </div>
            <div class="footer-block">
                <div class="title">
                    <strong>@T("Footer.MyAccount")</strong>
                </div>
                <ul class="list">
                    @if (Model.DisplayCustomerInfoFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                    }
                    @if (Model.DisplayCustomerOrdersFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                    }
                    @if (Model.DisplayCustomerAddressesFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                    }
                    @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                    }
                    @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                    }
                    @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                    }
                    @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                    }
                </ul>
            </div>
        </div>
        @await Component.InvokeAsync("SocialButtons")
    </div>
    <div class="footer-lower">
        <div class="footer-texts">
            @if(!removeCopyright || !removeDesignedBy)
            {
                <div class="footer-text credits">
                    @if(!removeCopyright)
                    { 
                        <div class="txt footer-powered-by">
                            @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                                Please find more info at https://www.nopcommerce.com/nopcommerce-copyright-removal-key*@
                            Powered by <a href="@(OfficialSite.Main)">nopCommerce</a>
                        </div>
                    }
                    @if (!removeDesignedBy)
                    {
                        <div class="txt footer-designed-by">
                            Designed by <a href="https://www.nop-templates.com/" target="_blank">Nop-Templates.com</a>
                        </div>
                    }
                </div>
            }
            <div class="footer-text payment">
                <img class="img footer-accepted-pay" src="@Url.Content($"~/Themes/{await themeContext.GetWorkingThemeNameAsync()}/Content/img/payment-sprite.png")" alt="" title="">
                @if (Model.DisplayTaxShippingInfoFooter)
                {
                    var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                    <div class="txt footer-tax-shipping">
                        @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("shippinginfo") }))
                    </div>
                }
            </div>
            <div class="footer-text copyright">
                <span class="txt footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>
            </div>
        </div>
        @await Component.InvokeAsync("StoreThemeSelector")
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</div>