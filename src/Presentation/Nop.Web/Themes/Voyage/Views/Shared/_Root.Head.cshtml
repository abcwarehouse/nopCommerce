@using StackExchange.Profiling
@using Nop.Core.Configuration
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Customers
@using Nop.Core.Domain.Seo
@using Nop.Services.Customers
@using Nop.Services.Events
@using Nop.Services.Security
@using Nop.Web.Framework.Events
@using Nop.Core
@using Nop.Core.Events

@inject CommonSettings commonSettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject IWorkContext workContext
@inject IThemeContext themeContext
@inject SeoSettings seoSettings
@inject AppSettings appSettings
@inject ICustomerService customerService
@inject Nop.Services.Localization.ILanguageService languageService

@{
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.countryselect.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.ajaxcart.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.common.js");
    //when jQuery migrate script logging is active you will see the log in the browser console
    if (commonSettings.JqueryMigrateScriptLoggingActive)
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.js");
    }
    else
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.min.js");
    }
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-ui-dist/jquery-ui.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation/jquery.validate.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery/jquery.min.js");

    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

    var displayMiniProfiler = appSettings.CommonConfig.MiniProfilerEnabled && await permissionService.AuthorizeAsync(StandardPermissionProvider.AccessProfiling);

    //event
    await eventPublisher.PublishAsync(new PageRenderingEvent(this.Html));

    var currentPageClass = (await (await Html.PartialAsync("_CurrentPageClass")).RenderHtmlContentAsync()).Trim();

    var loggedInClass = String.Empty;
    var isLoggedIn = await customerService.IsRegisteredAsync(await workContext.GetCurrentCustomerAsync());

    if (isLoggedIn)
    {
        loggedInClass = "logged-in";
    }
    else {
        loggedInClass = "not-logged-in";
    }
}
<!DOCTYPE html>
<html lang="@languageService.GetTwoLetterIsoLanguageName(await workContext.GetWorkingLanguageAsync())" @(await this.ShouldUseRtlThemeAsync() ? Html.Raw(" dir=\"rtl\"") : null) @Html.NopPageCssClasses()>
    <head>
        <title>@Html.NopTitle()</title>
        <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
        <meta name="description" content="@(Html.NopMetaDescription())" />
        <meta name="keywords" content="@(Html.NopMetaKeywords())" />
        <meta name="generator" content="nopCommerce" />
    	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0" />
        <link rel="preload" as="font" href="@Url.Content($"~/Themes/{await themeContext.GetWorkingThemeNameAsync()}/Content/fonts/voyage.woff")" crossorigin>
        @Html.NopHeadCustom()
        @*This is used so that themes can inject content into the header*@
        @await Html.PartialAsync("Head")
    	@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeadHtmlTag })
		@await Component.InvokeAsync("Widget", new { widgetZone = "head_html_tag_after_css_files_voyage" })
	    @Html.NopCssFiles(ResourceLocation.Head)
	    @Html.NopScripts(ResourceLocation.Head)
        @Html.NopCanonicalUrls()
        @await Component.InvokeAsync("NewsRssHeaderLink")
        @await Component.InvokeAsync("BlogRssHeaderLink")
    	@*Insert favicon and app icons head code*@
        @await Component.InvokeAsync("Favicon")
        @if (displayMiniProfiler)
        {
            <mini-profiler />
        }
    	@Html.NopInlineScripts(ResourceLocation.Head)
        <!--Powered by nopCommerce - https://www.nopCommerce.com-->
    </head>
	<body class="voyage @currentPageClass @loggedInClass">
        @RenderBody()
	    @Html.NopCssFiles(ResourceLocation.Footer)
	    @Html.NopScripts(ResourceLocation.Footer)
	    @Html.NopInlineScripts(ResourceLocation.Footer)
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
    </body>
</html>