@using Nop.Core
@using Nop.Services.Configuration
@using Nop.Core.Domain.Seo

@inject ISettingService settingService
@inject IStoreContext storeContext
@inject SeoSettings seoSettings

@{
    Layout = "_ColumnsOne";

    //title
    if (!string.IsNullOrEmpty(seoSettings.HomepageTitle))
    {
        Html.AddTitleParts(seoSettings.HomepageTitle);
    }

    //meta
    if (!string.IsNullOrEmpty(seoSettings.HomepageDescription))
    {
        Html.AddMetaDescriptionParts(seoSettings.HomepageDescription);
    }

    //page class
    Html.AppendPageCssClassParts("html-home-page");

    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;

    var HomepageTopicLayout = string.Empty;
    HomepageTopicLayout = await settingService.GetSettingByKeyAsync("VoyageThemeSettings.HomepageTopicLayout", "horizontal", storeId, true);
}
<div class="page home-page @HomepageTopicLayout">
    <div class="page-body"> 
        @await Component.InvokeAsync("HomepageCategories")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeCategories })
        @await Component.InvokeAsync("TopicBlock", new { systemName = "HomepageText" })
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeProducts })
        @await Component.InvokeAsync("HomepageProducts")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeBestSellers })
        @await Component.InvokeAsync("HomepageBestSellers")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeNews })
        @await Component.InvokeAsync("HomepageNews")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforePoll })
        @await Component.InvokeAsync("HomepagePolls")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBottom })
    </div>
</div>
