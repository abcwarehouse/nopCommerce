@model AdminHeaderLinksModel
@using Nop.Core
@using Nop.Services.Customers
@using Nop.Services.Customers
@inject IWorkContext workContext
@inject ICustomerService customerService

@{
    var currentCustomer = await workContext.GetCurrentCustomerAsync();
    bool isAdmin = await customerService.IsAdminAsync(currentCustomer);
}

@* Added role check using `ICustomerService.IsAdminAsync()` to ensure only admin users see the admin link   *@

@if (Model.IsCustomerImpersonated || (Model.DisplayAdminLink && isAdmin))
{
    <div class="admin-header-links">
        @if (Model.IsCustomerImpersonated)
        {
            <div class="impersonate">
                <span>@string.Format(T("Account.ImpersonatedAs").Text, Model.ImpersonatedCustomerName)</span>
                <a href="@Url.RouteUrl("Logout")" class="finish-impersonation" title="@T("Account.ImpersonatedAs.Finish.Hint")">@T("Account.ImpersonatedAs.Finish")</a>
            </div>
        }
        @if (Model.DisplayAdminLink && isAdmin)
        {
            <a href="@Url.Content("~/Admin")" class="administration">@T("Account.Administration")</a>
        }
        @if (!string.IsNullOrEmpty(Model.EditPageUrl))
        {
            <a href="@Model.EditPageUrl" class="manage-page">@T("Common.ManagePage")</a>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.AdminHeaderLinksAfter })
    </div>
}