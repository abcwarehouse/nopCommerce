@model CheckoutCompletedModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-order-completed-page");

    var order = ViewBag.Order as Nop.Core.Domain.Orders.Order;
    var orderItems = ViewBag.OrderItems as IList<Nop.Core.Domain.Orders.OrderItem>;
}

<!-- Load Transaction event and parameters -->
<script>
window.bvCallback = function (BV) {
  BV.pixel.trackTransaction({
    "currency": "USD",
    "orderId": "@Model.CustomOrderNumber",
    "total": "@order.OrderSubtotalInclTax",
    "items": [
      @foreach (var item in orderItems)
      {
        @:{
          "price": "@item.UnitPriceInclTax",
          "quantity": "@item.Quantity",
          "productId": "@item.ProductId"
        }@(item != orderItems.Last() ? "," : "")
      }
    ]
  });
};
</script>

<div class="page checkout-page order-completed-page">
    @if (!Model.OnePageCheckoutEnabled)
    {
        @await Component.InvokeAsync("CheckoutProgress",  new { step = CheckoutProgressStep.Complete })
    }
    <div class="page-title">
        <h1>@T("Checkout.ThankYou")</h1>
    </div>
    <div class="page-body checkout-data">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedTop, additionalData = Model })
        <div class="section order-completed">
            <div class="title">
                <strong>@T("Checkout.YourOrderHasBeenSuccessfullyProcessed")</strong>
            </div>
            <div class="details">
                <div class="order-number">
                    <strong>@T("Checkout.OrderNumber"): @Model.CustomOrderNumber</strong>
                </div>
                <div class="details-link">
                    <a href="@Url.RouteUrl("OrderDetails", new { orderID = Model.OrderId })">@T("Checkout.PlacedOrderDetails")</a>
                </div>
            </div>
            <div class="buttons">
                <button type="button" class="button-1 order-completed-continue-button" onclick="setLocation('@Url.RouteUrl("Homepage")')">@T("Checkout.ThankYou.Continue")</button>
            </div>
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedBottom, additionalData = Model })
    </div>
</div>

@if (order != null)
{
<!--load Transaction event and parameters-->
<script>
window.bvCallback = function (BV) {
    BV.pixel.trackTransaction({
        "currency": "@order.CustomerCurrencyCode",
        "orderId": "@order.Id",
        "total": "@order.OrderTotal",
        "items": [
            @foreach (var item in orderItems)
            {
                <text>{
                    "price": "@item.UnitPriceInclTax",
                    "quantity": "@item.Quantity",
                    "productId": "@item.ProductId"
                },</text>
            }
        ]
    });
};
</script>
}
