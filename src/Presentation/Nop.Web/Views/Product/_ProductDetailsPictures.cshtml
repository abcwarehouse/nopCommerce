@model ProductDetailsModel
@{
    Html.AddScriptParts(ResourceLocation.Footer, "~/lib_npm/magnific-popup/jquery.magnific-popup.min.js");
    Html.AddCssFileParts("~/lib_npm/magnific-popup/magnific-popup.css");
}

<div class="gallery">
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsBeforePictures, additionalData = Model })

    <div class="picture">
        <!-- Main product image wrapped in anchor (falls back to ImageUrl if FullSizeImageUrl is empty) -->
        <a href="@(string.IsNullOrEmpty(Model.DefaultPictureModel?.FullSizeImageUrl) 
                    ? Model.DefaultPictureModel?.ImageUrl 
                    : Model.DefaultPictureModel?.FullSizeImageUrl)"
           title="@Model.DefaultPictureModel?.Title"
           id="main-product-img-lightbox-anchor-@Model.Id">
            <img id="main-product-img-@Model.Id"
                 src="@Model.DefaultPictureModel?.ImageUrl"
                 alt="@Model.DefaultPictureModel?.AlternateText"
                 title="@Model.DefaultPictureModel?.Title" />
        </a>
    </div>

    @* Thumbnails *@
    @if (Model.PictureModels.Count > 1)
    {
        <div class="picture-thumbs">
            @foreach (var picture in Model.PictureModels)
            {
                var thumbFull = string.IsNullOrEmpty(picture.FullSizeImageUrl) ? picture.ImageUrl : picture.FullSizeImageUrl;
                <a class="thumb-item" href="@thumbFull" title="@picture.Title">
                    <img src="@picture.ThumbImageUrl"
                         alt="@picture.AlternateText"
                         title="@picture.Title"
                         data-defaultsize="@picture.ImageUrl"
                         data-fullsize="@thumbFull" />
                </a>
            }
        </div>
    }

    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsAfterPictures, additionalData = Model })
</div>

<script asp-location="Footer">
    (function ($) {
        $(function () {
            var anchorSel = '#main-product-img-lightbox-anchor-@Model.Id';
            var imgSel    = '#main-product-img-@Model.Id';

            // Initialize on the anchor (harmless if also force-opening below)
            $(anchorSel).magnificPopup({
                type: 'image',
                closeOnContentClick: true,
                mainClass: 'mfp-img-mobile',
                image: { verticalFit: true }
            });

            // Force-open popup on main anchor or image to beat conflicting handlers
            $(document).on('click', anchorSel + ',' + imgSel, function (e) {
                e.preventDefault();
                e.stopImmediatePropagation();

                var src = $(anchorSel).attr('href') || $(imgSel).attr('src');
                if (!src) return;

                $.magnificPopup.open({
                    items: { src: src },
                    type: 'image',
                    mainClass: 'mfp-img-mobile',
                    image: { verticalFit: true }
                });

                return false;
            });

            // Thumbnails gallery
            $('.picture-thumbs').magnificPopup({
                type: 'image',
                delegate: 'a',
                gallery: { enabled: true }
            });

            // Swap main image and update lightbox link when a thumbnail is clicked
            $('.thumb-item > img').on('click', function () {
                var $img = $(this);

                $(imgSel)
                    .attr('src', $img.data('defaultsize'))
                    .attr('alt', $img.attr('alt'))
                    .attr('title', $img.attr('title'));

                $(anchorSel)
                    .attr('href', $img.data('fullsize'))
                    .attr('title', $img.attr('title'));
            });
        });
    })(jQuery);
</script>

<style>
  /* Optional: helps if an overlay or layout was eating clicks */
  .picture a { display: inline-block; }
  .picture img { pointer-events: auto; }
</style>
