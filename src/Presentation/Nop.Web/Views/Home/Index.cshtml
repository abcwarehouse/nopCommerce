@using Nop.Core.Domain.Seo
@inject SeoSettings seoSettings

@{
    Layout = "_ColumnsOne";

    //title
    if (!string.IsNullOrEmpty(seoSettings.HomepageTitle))
    {
        Html.AddTitleParts(seoSettings.HomepageTitle);
    }

    //meta
    if (!string.IsNullOrEmpty(seoSettings.HomepageDescription))
    {
        Html.AddMetaDescriptionParts(seoSettings.HomepageDescription);
    }

    //page class
    Html.AppendPageCssClassParts("html-home-page");
}
<div class="page home-page">
    <div class="page-body">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageTop })
        @await Component.InvokeAsync("TopicBlock", new { systemName = "HomepageText" })
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeCategories })
        @await Component.InvokeAsync("HomepageCategories")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeProducts })
        @await Component.InvokeAsync("HomepageProducts")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeBestSellers })
        @await Component.InvokeAsync("HomepageBestSellers")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeNews })
        @await Component.InvokeAsync("HomepageNews")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforePoll })
        @await Component.InvokeAsync("HomepagePolls")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBottom })

        <section id="personalized-section" class="home-block">
            <h2>Recommended for You</h2>
            <div id="personalized-products" class="product-grid"></div>
        </section>

    </div>
</div>


<script>
    async function loadPersonalizedProducts() {
        const userId = window.ssShopperId || ''; // already set by IntelliSuggest tracking
        if (!userId) return;

        try {
            const res = await fetch(`/searchspring/personalized?userId=${encodeURIComponent(userId)}&resultsPerPage=8`);
            if (!res.ok) throw new Error(`HTTP ${res.status}`);
            const data = await res.json();

            if (!data.results || !data.results.length) return;

            const container = document.querySelector('#personalized-products');
            container.innerHTML = '';

            data.results.forEach(prod => {
                const item = document.createElement('div');
                item.className = 'item-box'; // nopCommerce product card
                item.innerHTML = `
                    <div class="product-item">
                        <div class="picture">
                            <a href="${prod.url}" title="${prod.name}">
                                <img src="${prod.imageUrl}" alt="${prod.name}">
                            </a>
                        </div>
                        <div class="details">
                            <h3 class="product-title">
                                <a href="${prod.url}">${prod.name}</a>
                            </h3>
                            <div class="add-info">
                                <div class="prices">
                                    <span class="price">${prod.price || ''}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                container.appendChild(item);
            });
        } catch (err) {
            console.error('Error loading personalized products:', err);
        }
    }

    document.addEventListener('DOMContentLoaded', loadPersonalizedProducts);

</script>